{"version":3,"sources":["Movies.js","GlobalStyle.js","App.js","index.js"],"names":["Movie","styled","div","Img","img","Title","h2","Summary","p","Year","h3","Genres__List","ul","Genres","li","Movies","year","title","summary","poster","genres","src","alt","className","map","index","key","GlobalStyle","createGlobalStyle","reset","Container","Section","section","Loading__txt","Movie__List","App","state","isLoading","getMovies","a","async","axios","get","movies","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+0DAKA,IAAMA,EAAQC,UAAOC,IAAV,KAYLC,EAAMF,UAAOG,IAAV,KAQHC,EAAQJ,UAAOK,GAAV,KAMLC,EAAUN,UAAOO,EAAV,KAePC,EAAOR,UAAOS,GAAV,KAIJC,EAAeV,UAAOW,GAAV,KAMZC,EAASZ,UAAOa,GAAV,KAmCGC,EA9BA,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAC9C,OACE,kBAACpB,EAAD,KACE,kBAACG,EAAD,CAAKkB,IAAKF,EAAQG,IAAKL,IACvB,yBAAKM,UAAU,eACb,kBAAClB,EAAD,CAAOkB,UAAU,gBAAgBN,GACjC,kBAACR,EAAD,CAAMc,UAAU,eAAeP,GAC/B,kBAACL,EAAD,KACGS,EAAOI,KAAI,SAACJ,EAAQK,GACnB,OACE,kBAACZ,EAAD,CAAQU,UAAU,gBAAgBG,IAAKD,GACpCL,OAKT,kBAACb,EAAD,CAASgB,UAAU,kBAAkBL,M,6PCzE7C,IAWeS,EAXKC,4BAAH,IACXC,K,ujBCEN,IAAMC,EAAY7B,UAAOC,IAAV,KAIT6B,EAAU9B,UAAO+B,QAAV,KAMPC,EAAehC,UAAOC,IAAV,KAKZgC,EAAcjC,UAAOC,IAAV,KAiEFiC,E,2MAvDbC,MAAQ,CACNC,WAAW,G,EAGbC,UAAY,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAKAE,IAAMC,IACd,6DANQ,gBAGEC,EAHF,EAERC,KACEA,KAAQD,OAKZ,EAAKE,SAAS,CAAEF,SAAQN,WAAW,IARzB,sC,mFAYVS,KAAKR,c,+BAEG,IAAD,EACuBQ,KAAKV,MAA3BC,EADD,EACCA,UAAWM,EADZ,EACYA,OACnB,OACE,oCACE,kBAACb,EAAD,KACE,kBAACC,EAAD,KACGM,EACC,kBAACJ,EAAD,KACE,0BAAMV,UAAU,gBAAhB,sCAKF,kBAACW,EAAD,KACGS,EAAOnB,KAAI,SAAAuB,GACV,OACE,kBAAC,EAAD,CACErB,IAAKqB,EAAMC,GACXA,GAAID,EAAMC,GACVhC,KAAM+B,EAAM/B,KACZC,MAAO8B,EAAM9B,MACbC,QAAS6B,EAAM7B,QACfC,OAAQ4B,EAAME,mBACd7B,OAAQ2B,EAAM3B,eAQ5B,kBAAC,EAAD,W,GAlDU8B,IAAMC,WC3BxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a828354e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\n// STYLED-COMPONENT\r\nconst Movie = styled.div`\r\n  background-color: #fff;\r\n  border-radius: 30px;\r\n  padding: 20px;\r\n  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\r\n  margin: 0 30px 60px 30px;\r\n  width: 40%;\r\n  height: 250px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n`;\r\nconst Img = styled.img`\r\n  max-width: 150px;\r\n  position: relative;\r\n  top: -50px;\r\n  margin-right: 30px;\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\r\n`;\r\n\r\nconst Title = styled.h2`\r\nfont-size: 1.5rem;\r\nfont-weight: 700;\r\nmargin-bottom: 10px;\r\nopacity: .8;\r\n`;\r\nconst Summary = styled.p`\r\nopacity: .7;\r\nfont-size: 0.8rem;\r\n  margin-top: 30px;\r\n  width: 100%;\r\n  height: 100px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 4; /* 라인수 */\r\n  -webkit-box-orient: vertical;\r\n  word-wrap: break-word;\r\n  line-height: 1.2rem;\r\n  height: 4.8rem; /* line-height 가 1.2em 이고 3라인을 자르기 때문에 height는 1.2em * 3 = 3.6em */\r\n`;\r\nconst Year = styled.h3`\r\nopacity: .5;\r\nmargin-bottom: 8px;\r\n`;\r\nconst Genres__List = styled.ul`\r\nopacity: .5;\r\ndisplay: flex;\r\nfont-size: 0.8rem;\r\n`;\r\n\r\nconst Genres = styled.li`\r\nmargin-right: 10px;\r\n`;\r\n\r\n// COMPONENT\r\nconst Movies = ({ year, title, summary, poster, genres }) => {\r\n  return (\r\n    <Movie>\r\n      <Img src={poster} alt={title} />\r\n      <div className=\"movie__data\">\r\n        <Title className=\"movie__title\">{title}</Title>\r\n        <Year className=\"movie__year\">{year}</Year>\r\n        <Genres__List>\r\n          {genres.map((genres, index) => {\r\n            return (\r\n              <Genres className=\"movie__genres\" key={index}>\r\n                {genres}\r\n              </Genres>\r\n            );\r\n          })}\r\n        </Genres__List>\r\n        <Summary className=\"movie__summary\">{summary}</Summary>\r\n      </div>\r\n    </Movie>\r\n  );\r\n};\r\n\r\nMovies.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Movies;\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset'; // css reset\r\nimport \"./font.css\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    ${reset};\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n    body {\r\n        background-color: #EFF3F7;\r\n        font-family: 'Merriweather', serif;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;","import React from \"react\";\nimport axios from \"axios\";\nimport Movies from \"./Movies\";\nimport styled, { css, createGlobalStyle } from \"styled-components\";\nimport GlobalStyle from \"./GlobalStyle\";\n\n// STYLED-COMPONENT\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n`;\nconst Section = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\nconst Loading__txt = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: center;\n`;\nconst Movie__List = styled.div`\npadding: 70px 50px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nflex-wrap: wrap;\n`;\n\n// COMPONENT\nclass App extends React.Component {\n  state = {\n    isLoading: true\n  };\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    this.setState({ movies, isLoading: false });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <>\n        <Container>\n          <Section>\n            {isLoading ? (\n              <Loading__txt>\n                <span className=\"loader__text\">\n                  Please wait API is loaded..sexsex\n                </span>\n              </Loading__txt>\n            ) : (\n              <Movie__List>\n                {movies.map(movie => {\n                  return (\n                    <Movies\n                      key={movie.id}\n                      id={movie.id}\n                      year={movie.year}\n                      title={movie.title}\n                      summary={movie.summary}\n                      poster={movie.medium_cover_image}\n                      genres={movie.genres}\n                    />\n                  );\n                })}\n              </Movie__List>\n            )}\n          </Section>\n        </Container>\n        <GlobalStyle />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}